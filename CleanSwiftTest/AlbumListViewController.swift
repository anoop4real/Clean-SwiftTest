//
//  AlbumListViewController.swift
//  CleanSwiftTest
//
//  Created by anoop mohanan on 25/03/17.
//  Copyright (c) 2017 anoop mohanan. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so you can apply
//  clean architecture to your iOS and Mac projects, see http://clean-swift.com
//

import UIKit

protocol AlbumListViewControllerInput
{
  func displaySomething(viewModel: AlbumList.Something.ViewModel)
}

protocol AlbumListViewControllerOutput
{
  func fetchAlbums(request: AlbumList.Something.Request)
        var albums: [Album] { get }
}

class AlbumListViewController: UIViewController, AlbumListViewControllerInput, UITableViewDataSource, UITableViewDelegate
{
  var output: AlbumListViewControllerOutput!
  var router: AlbumListRouter!
  var albumsVM:[AlbumList.Something.ViewModel.Album] = []
  @IBOutlet var albumListTV:UITableView!
  // MARK: - Object lifecycle
  
  override func awakeFromNib()
  {
    super.awakeFromNib()
    AlbumListConfigurator.sharedInstance.configure(viewController: self)
  }
  
  // MARK: - View lifecycle
  
  override func viewDidLoad()
  {
    super.viewDidLoad()
    fetchAlbumsOnLoad()
  }
  
  // MARK: - Event handling
  
  func fetchAlbumsOnLoad()
  {
    // NOTE: Ask the Interactor to do some work
    
    let request = AlbumList.Something.Request()
    output.fetchAlbums(request: request)
  }
  
  // MARK: - Display logic
  
  func displaySomething(viewModel: AlbumList.Something.ViewModel)
  {
    // NOTE: Display the result from the Presenter
    
    // nameTextField.text = viewModel.name
    albumsVM = viewModel.albumList
    DispatchQueue.main.async {
        self.albumListTV.reloadData()
    }
    
  }
    
    // MARK:Tableviewdelegate
    
    func numberOfSections(in tableView: UITableView) -> Int{
        
        return 1
    }
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int{
        
        return albumsVM.count
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell{
        
        let cell = tableView.dequeueReusableCell(withIdentifier: "albumcell", for: indexPath) as! AlbumTableViewCell
        let album = albumsVM[indexPath.row]
        cell.titleLbl.text = album.title
        cell.artistLbl.text = album.artist
        
        return cell
    }
    
}
